---
// component imports
import { Icon } from "astro-icon/components";

// data imports
import { menu } from "../data/menu";

// config import
import { SITE } from "../config";

const pathname = Astro.url.pathname;
---

<nav class="bg-white dark:bg-n700 fixed w-full z-20 top-0 start-0 " id="menu">
  <div class="max-w-screen-xl flex flex-wrap items-center justify-between mx-auto p-4">
    <a href="/" class="flex items-center space-x-3 rtl:space-x-reverse">
      <Icon name={SITE.logo} width={40} height={40} />
      <span class="self-center text-2xl font-semibold whitespace-nowrap dark:text-white">
        {SITE.logoText}
      </span>
    </a>
    <div class="flex md:order-1 space-x-3 md:space-x-0 rtl:space-x-reverse">
      <!-- Mobile Menu Toggle -->
      <button id="btn-menu" data-collapse-toggle="navbar-sticky" type="button"
        class="inline-flex items-center p-2 w-10 h-10 justify-center text-sm text-gray-500 rounded-lg md:hidden hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-gray-200 dark:text-gray-400 dark:hover:bg-gray-700 dark:focus:ring-gray-600"
        aria-controls="navbar-sticky" aria-expanded="false">
        <span class="sr-only">Open main menu</span>
        <svg class="w-5 h-5" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 17 14">
          <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
            d="M1 1h15M1 7h15M1 13h15" />
        </svg>
      </button>
    </div>
    <div class="items-center justify-between hidden w-full md:flex md:w-auto md:order-2" id="navbar-sticky">
      <ul class="flex flex-col p-4 md:p-0 mt-4 font-medium border border-gray-100 rounded-lg md:space-x-8 rtl:space-x-reverse md:flex-row md:mt-0 md:border-0 dark:border-gray-700">
        {
          menu.map((item) => (
            <li class="flex items-center">
              <a
                href={item.href}
                class:list={{
                  ["block py-2 px-3 rounded md:p-0"]: true,
                  ["active"]: pathname === item.href,
                }}>{item.label}
              </a>
            </li>
          ))
        }
        <li class="flex items-center align-middle ml-1.5 md:ml-2 md:mr-1.5">
          <!-- Theme Toggle Button -->
          <button id="theme-toggle"
            class="inline-flex items-center p-2 rounded-lg hover:bg-gray-100 dark:hover:bg-gray-700"
            aria-label="Toggle dark mode">
            <span class="sr-only">Toggle dark mode</span>
            <Icon name="sun" class="w-6 h-6 dark:hidden" />
            <Icon name="moon" class="w-6 h-6 hidden dark:block" />
          </button>
        </li>
      </ul>
    </div>
  </div>
</nav>

<style>
  .active {
    @apply text-light-theme bg-n500 md:text-primary-light md:bg-transparent dark:text-primary-dark dark:bg-dark-theme md:dark:text-primary-dark md:dark:bg-transparent;
  }
</style>

<script>
  (function () {
    const stored = localStorage.getItem("theme");
    const prefersDark = window.matchMedia("(prefers-color-scheme: dark)").matches;
    const isDark = stored === "dark" || (!stored && prefersDark);
    document.documentElement.classList.toggle("dark", isDark);
  })();

  const themeToggleBtn = document.getElementById('theme-toggle');
  themeToggleBtn?.addEventListener('click', () => {
    const isDark = document.documentElement.classList.toggle('dark');
    localStorage.setItem('theme', isDark ? 'dark' : 'light');
  });

  function toggleNav() {
    const btnMenu = document.getElementById('btn-menu');
    const navbar = document.getElementById('navbar-sticky');
    btnMenu?.addEventListener('click', function () {
      navbar?.classList.toggle('hidden');
    });
  }

  toggleNav();

  document.addEventListener("astro:after-swap", () => {
    toggleNav();
    const stored = localStorage.getItem("theme");
    const prefersDark = window.matchMedia("(prefers-color-scheme: dark)").matches;
    const isDark = stored === "dark" || (!stored && prefersDark);
    document.documentElement.classList.toggle("dark", isDark);
    const themeToggleBtn = document.getElementById('theme-toggle');
    themeToggleBtn?.addEventListener('click', () => {
      const isDark = document.documentElement.classList.toggle('dark');
      localStorage.setItem('theme', isDark ? 'dark' : 'light');
    });
  });
</script>